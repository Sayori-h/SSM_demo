spring:
  application:
    name: springBoot-web-myBatis
  datasource:
    username: 496uhz7yBTyuZvt.root
    password: XO9dNYDQTxdlRU1d
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://gateway01.ap-northeast-1.prod.aws.tidbcloud.com:4000/IMServer
    hikari:
      #最大连接数，默认是10
      maximum-pool-size: 30
      #最小空闲连接，默认是10
      minimum-idle: 30
      #等待连接池分配连接的最大时长，超过该时长还没有可用连接则发生超时异常（单位毫秒）
      connection-timeout: 5000
      #空闲连接的最大时长，空闲多久就被释放回收，设置为0不让连接回收
      idle-timeout: 0
      #一个连接的最大生命时间，超过该时间还没有使用就回收掉（单位毫秒）
      #在MySQL数据库中，一个连接的最大存活时间通常是由wait_timeout参数来控制的。这个参数定义了非交互式连接可以保持空闲的最长时间，超过这个时间后，连接将被自动关闭。默认情况下，wait_timeout的值是28800秒，也就是8小时。不过，这个值是可以根据需要进行调整的。你可以通过修改MySQL的配置文件（通常是my.cnf或my.ini），在[mysqld]部分设置wait_timeout的值来更改最大连接存活时间。
      max-lifetime: 18000000

  #springboot默认线程池的配置
  task:
    execution:
      pool:
        #核心线程数大小(cup的个数； 2*cpu个数)
        core-size: 8
        #是否允许核心线程超时
        allow-core-thread-timeout: true
        #最大线程数大小 (2*cpu个数+1)
        max-size: 17
        #线程空闲多久就可以销毁
        keep-alive: 300s
        #任务队列大小
        queue-capacity: 1024
        #如果设置为 false，则当应用程序上下文关闭时，任务执行池将不再接受新的任务。
        shutdown:
          accept-tasks-after-context-close: false
      shutdown:
        #这个配置选项决定了当应用程序关闭时，是否应该等待当前正在执行的任务完成。
        await-termination: true
        #如果需要等待线程执行完成，那么我应该等待多长时间（以毫秒、秒、分钟等为单位）来让当前正在执行的任务完成。
        await-termination-period: 1m
      #线程池的线程名称的前缀
      thread-name-prefix: dlyk-thread-pool-

server:
  port: 8080
  servlet:
    context-path: /

mybatis:
  mapper-locations: classpath:mapper/*.xml

#配置springboot框架的日志打印级别是debug
#debug: true
#trace: true
logging:
  level:
    #粗略的日志级别控制，那就是所有的类都打印info级别的日志
    root: info
    #只配置了sql，没有配置root，但是root还是info，也就是默认root可以不配
    sql: error
    #但是mybatis包下的类采用error级别打印，其它类还是采用root所配置的日志级别打印
    org.mybatis: error
    #配置我们自己的类的日志打印级别
    com.powernode: debug
    #指定我们自定义的分组下的包采用什么日志打印级别
    #powernode: debug

  #自定义分组（组名：powernode）
  group:
    powernode: com.powernode,com.bjpowernode

  #把日志打印到文件中
  file:
    #name: spring-boot.log
    path: springBoot-web-myBatis/src/main/resources/log

  logback:
    rolling-policy:
      #日志文件达到多大时进行归档
      max-file-size: 500MB
      #所有的归档日志文件总共达到多大时进行删除，默认是0B表示不删除
      total-size-cap: 50GB
      #归档日志文件最多保留几天
      max-history: 60
      #启动项目时是否要清理归档日志文件
      clean-history-on-start: false
      #归档日志文件名的格式
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
